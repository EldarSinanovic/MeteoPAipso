name: CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch: {}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Test
        run: dotnet test --no-build --verbosity normal

      - name: Build Docker image
        if: success()
        run: |
          docker build -t meteomesh/station:staging -f station/Dockerfile . || true

      - name: Login to Docker Hub
        if: secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_TOKEN
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push image to Docker Hub
        if: secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_TOKEN
        run: |
          docker tag meteomesh/station:staging ${{ secrets.DOCKERHUB_USERNAME }}/meteomesh-station:staging || true
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/meteomesh-station:staging || true

  deploy-to-staging:
    needs: build-and-test
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Manual approval
        uses: chrismckenzie/approval-action@v2
        with:
          reviewers: 'team'

      - name: Deploy to staging (placeholder)
        run: echo "Deploy to staging - replace with your deployment script"

  deploy-to-prod:
    needs: deploy-to-staging
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://example.com
    steps:
      - name: Manual approval
        uses: chrismckenzie/approval-action@v2
        with:
          reviewers: 'ops'

      - name: Deploy to production (placeholder)
        run: echo "Deploy to production - replace with your deployment script"

  rollback-on-failure:
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Rollback (placeholder)
        run: echo "Rollback to last known good deployment - implement your rollback strategy here"
