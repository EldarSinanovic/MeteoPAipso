Aufgabenstellung
Praxisarbeit OOPV.TA1A.PA
Inhalte aus Fächer
Objektorientiert Programmieren Grundlagen
Objektorientiert Programmieren Vertiefung
HFINFA - 2. Studienjahr
Praxisorientierte Einzelarbeit im Umfang von 30 Lernstunden. Diese Stundenanzahl ist als minimaler
Richtwert zu verstehen. Es kann also auch mehr Zeit in die Erstellung der Arbeit investiert werden.
In den vorliegenden Fächern hast du dich insbesondere mit den folgenden Lernzielen auseinandergesetzt:
- Grundlagen der Objektorientierung
- Objektorientierte Analyse und Design via UML
- Anforderungsanalyse basierend auf Szenarien
- Paralleler Programmierung
- Analyse und Design von verteilten Systemen
- Grundlagen DevOps
Im Rahmen dieser qualifikationsrelevanten Arbeit sollst du das Gelernte in den Fächern OO Grundlagen und
OO Vertiefung in einem praktischen Kontext anwenden und so deine Kompetenz weiter ausbauen.
Prüf-Aufg OOPV.TI1A.PA_S2310.docx
19.01.2024 2/6
Arbeitsauftrag
1 Beschreibung der Ausgangslage1
Genauere Wetterprognosen sind in den Zeiten des Klimawandels besonders wichtig, deshalb muss das
aktuelle Datenerfassungssystem für meteorologische Daten verfeinert und verbessert werden.
Unter der Leitung der ETH in Zürich soll ein komplett neues Konzept für die Erfassung von meteorologischen
Daten realisiert werden.
Dabei soll die Richtigkeit der Messung von heute 5% auf 2% gesenkt werden und die Messfrequenz
verdoppelt werden (nun alle 15 Minuten).
Dabei wird der nachfolgende Ansatz verwendet:
- Basis der Datenerfassung bilden autonome Messstationen, welche einen bestimmten Parameter
wie
o Temperatur
o Luftdruck
o Feuchte
o Grösse und Verteilung der Regentropfen via Lidar2
o etc.
erfassen und in einem lokalen Datenspeicher zwischenspeichern.
- Die Messtationen arbeiten an sich vollkommen parallel und legen die Frequenz der Messung
aufgrund eines Algorithmus selbst fest, aber wichtig ist, dass die Messstationen sich entsprechend
der nachfolgenden Regeln synchronisiert werden:
o Wenn es regnet (Lidar) dann wird die Feuchtigkeitsmessung ausgesetzt
o Wenn der Luftdruck grösse5 950 HPa ist, dann wird die Frequenz der Temperaturmessung
verdoppelt
- Die Messstationen leiten die Daten an einen lokalen Knoten via 4G weiter. Dabei werden die
Daten durch die lokalen Knoten abgerufen und in einem Massenspeicher in der darauf
zwischengespeichert.
- Es existieren ca. 20'000 lokale Knoten, welche über die gesamte Schweiz verteilt sind.
- Die Daten, welche in der lokalen Knoten zwischen gespeichert werden, sind zuvor
o auf Richtigkeit und
o Aktualität überprüft worden
- Die Zentralen in
o Zürich und
o Lausanne
können die zwischengespeicherten Daten aus den lokalen Knoten abgerufen und in eine aktuelle
Studie oder Wetterprognose verarbeitet werden.
1 Die Fragestellung kann durch die Studierenden erweitert oder in Absprache mit dem Dozenten angepasst werden
2 Lidar (Light Detection and Ranging) ist eine Methode zur optischen Abstands- und Geschwindigkeitsmessung sowie
zur Fernmessung atmosphärischer Parameter. Es ist eine Form des dreidimensionalen Laserscanning. Statt der
Radiowellen wie beim Radar werden Laserstrahlen verwendet 1
Prüf-Aufg OOPV.TI1A.PA_S2310.docx
19.01.2024 3/6
2 Analyse und Design des parallelen Systems der Messstationen
Erstelle, ausgehend von der nachfolgenden Schilderung, eine SA-Ansatz für das zuvor beschriebene
System.
Erstelle dabei:
• Ein Kontextdiagramm
• Ein Datenflussdiagramm
• Mindestens eine MiniSpec
Versuche dabei vor allem die dir relevant erscheinenden Bereiche, welche Synchronisation
benötigen, aufzuzeigen und die zuvor aufgestellten Regeln (Keine Feuchtmessung bei Regen etc.) zu
implementieren.
Erstelle einen Prototypen 3 in C# oder einer anderen Programmiersprache für ein System, welches
o Simulierte Lidar Daten
o Feuchtigkeit
erfassen kann
Lieferobjekte
o Analyse nach SA beinhaltend
§ Kontextdiagramm
§ Verfeinierung in Datenflussdiagrammen
§ MiniSpecs wo nötig
o Design welcher speziell die Synchronisationsbedürfnisse aufzeigt
o Prototyp in C# oder einer anderen Programmiersprache
3 Gestaltung und Realisierung des verteilten Systems
Das verteilte System, bestehend aus den nachfolgenden Knoten
a. Messstationen
b. lokalen Knoten
c. Zentrale
soll analysiert und beschrieben werden.
Dabei steht die Gestaltung der relevanten Services im Vordergrund
Erstelle, ausgehend von der Beschreibung
- Eine ContextMap
- Ein Diagramm, welche geeignet ist, die Services und deren Interaktion aufzuzeigen
- Eine Liste der aus deiner Sicht notwendigen Services (min. 3)
Realisiere einen der erkannten Services mittels WCF oder gRPC.
3 Der Prototyp verfügt selbstverständlich nicht über echte Sensoren, sondern simuliert die Daten nur.
Prüf-Aufg OOPV.TI1A.PA_S2310.docx
19.01.2024 4/6
Lieferobjekte
o Analyse beinhaltend
§ ContextMap
§ Diagramm, welches die Struktur der Services aufzeigt (BPMN oder
Service/Componentdiagramm)
o Struktur und Beschreibung der Services (min 3)
o Prototyp eines Services in WCF oder gRPC
4 Einbettung in DevOps
Da wir im Projekt gleichzeitig die Möglichkeiten von DevOps ausloten worden sind dir die
nachfolgenden Aufgaben zusätzlich zugeteilt worden:
Deine Aufgabe ist es, eine vollständige CI/CD-Pipeline zu entwerfen und zu implementieren, die die
folgenden Anforderungen erfüllt:
Continuous Integration (CI):
Jeder Code-Commit sollte automatisch getestet werden. Stelle sicher, dass Unit-Tests und
Integrationstests durchgeführt werden und dass der Code den festgelegten Qualitätsstandards
entspricht.
Continuous Delivery (CD):
Nach erfolgreichem Testen sollte der Code automatisch in einer Staging-Umgebung bereitgestellt
werden. Implementiere eine Strategie für das Rollback, falls Probleme auftreten.
Continuous Deployment (CD):
Nach erfolgreicher Bereitstellung und Überprüfung in der Staging-Umgebung sollte der Code
automatisch in der Produktionsumgebung bereitgestellt werden.
Monitoring & Logging:
Implementiere eine Lösung für das Monitoring und Logging der Anwendung in der
Produktionsumgebung. Diess sollen in der Lage sein, Leistungsdaten zu sammeln und auf Probleme
zu reagieren.
Lieferumfang:
- Ein Diagramm, das den Workflow der CI/CD-Pipeline darstellt.
- Eine Dokumentation, die erklärt, wie die Pipeline funktioniert, einschließlich der verwendeten
Tools und Prozesse
5 Management Summary verfassen
Verfasse zum Schluss ein Management Summary über die gesamte Arbeit. Das Management
Summary soll die wesentlichen Punkte aus allen Teilaufgaben zusammenfassen.
Es soll in einer Dichte und Klarheit verfasst sein, dass du es der Unternehmensleitung vorlegen
könntest.
Prüf-Aufg OOPV.TI1A.PA_S2310.docx
19.01.2024 5/6
Aufbau der Praxisarbeit
Die Praxisarbeit muss als PDF-Dokument die Lösungen für alle oben genannten Aufgaben beinhalten. Dieses
Dokument muss folgende inhaltliche Gliederung zeigen:
1. Management Summary
2. Beschreibung der beinhalteten parallelen Systeme
3. Beschreibung des verteilten Systems
4. Umsetzung in DevOps
5. Lessons learned inkl. Planning und Controlling
6. Anhang
Der Umfang des Dokuments, ohne Management Summary, soll inklusiv aller relevanten Diagramme
mindestens 8 Seiten betragen. Für die korrekte Struktur des Dokuments orientierst du dich am Leitfaden für
schriftliche Arbeiten in der ipso Bildung.